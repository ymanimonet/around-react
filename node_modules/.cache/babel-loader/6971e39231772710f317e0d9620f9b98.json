{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  gatherUserInfo() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  updateUserInfo({\n    name,\n    about\n  }) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  updateAvatar({\n    avatar\n  }) {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  removeCard(cardId) {\n    return fetch(this._baseUrl + \"/cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  addLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + cardId, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n  removeLike(cardId) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + cardId, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-7\",\n  headers: {\n    authorization: \"20ab70d8-b14f-4271-bdde-c31cc9b6d660\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/ymanifrancis/dev/around-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","gatherUserInfo","fetch","then","res","ok","json","Promise","reject","Error","statusText","updateUserInfo","name","about","method","body","JSON","stringify","updateAvatar","avatar","getInitialCards","addCard","link","removeCard","cardId","addLike","removeLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    gatherUserInfo() {\n        return fetch(this._baseUrl + \"/users/me\", {\n            headers: this._headers\n          })\n          .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)))\n    }\n\n    updateUserInfo({name, about}) {\n        return fetch(this._baseUrl + \"/users/me\", {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n            })\n          })\n          .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)))\n    }\n\n    updateAvatar({avatar}) {\n        return fetch(this._baseUrl + \"/users/me/avatar\", {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar\n            })\n          })\n          .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n    }\n  \n    getInitialCards() {\n      return fetch(this._baseUrl + \"/cards\", {\n          headers: this._headers\n        })\n        .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)))\n    }\n\n    addCard({name, link}) {\n        return fetch(this._baseUrl + \"/cards\", {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link\n            })\n          })\n          .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n    }\n\n    removeCard(cardId) {\n        return fetch(this._baseUrl + \"/cards/\" + cardId, {\n                method: \"DELETE\",\n                headers: this._headers\n            })\n            .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n    }\n\n    addLike(cardId) {\n        return fetch(this._baseUrl + \"/cards/likes/\" + cardId, {\n                method: \"PUT\",\n                headers: this._headers\n            })\n            .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n    }\n\n    removeLike(cardId) {\n        return fetch(this._baseUrl + \"/cards/likes/\" + cardId, {\n                method: \"DELETE\",\n                headers: this._headers\n            })\n            .then(res => res.ok ? res.json() : Promise.reject(new Error(res.statusText)));\n    }\n    \n  \n}\n\nexport const api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-7\",\n    headers: {\n      authorization: \"20ab70d8-b14f-4271-bdde-c31cc9b6d660\",\n      \"Content-Type\": \"application/json\"\n    }\n});\n  \n"]},"metadata":{},"sourceType":"module"}